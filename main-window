import tkinter as tk

class DrawingApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Drawing Application")

        self.color = 'black'
        # turn eraser off when pen is on
        self.eraser_mode = False

        # initialize the Canvas window
        self.canvas = tk.Canvas(root, bg='white', width=600, height=400)
        self.canvas.pack(fill=tk.BOTH, expand=True)

        # mouse events binded to the Canvas
        self.canvas.bind("<B1-Motion>", self.paint)

        # menu bar/toggle for Mac
        self.menu_bar = tk.Menu(root)
        root.config(menu=self.menu_bar)

        # color section of menu
        self.color_menu = tk.Menu(self.menu_bar, tearoff=0)
        self.menu_bar.add_cascade(label="Colors", menu=self.color_menu)
        self.color_menu.add_command(label="Black", command=lambda: self.set_color('black'))
        self.color_menu.add_command(label="Red", command=lambda: self.set_color('red'))
        self.color_menu.add_command(label="Green", command=lambda: self.set_color('green'))
        self.color_menu.add_command(label="Blue", command=lambda: self.set_color('blue'))

        # tools section of menu
        self.tools_menu = tk.Menu(self.menu_bar, tearoff=0)
        self.menu_bar.add_cascade(label="Tools", menu=self.tools_menu)
        self.tools_menu.add_command(label="Eraser", command=self.toggle_eraser)
        self.tools_menu.add_command(label="Clear Canvas", command=self.clear_canvas)

        # shapes section of menu
        self.shapes_menu = tk.Menu(self.menu_bar, tearoff=0)
        self.menu_bar.add_cascade(label="Shapes", menu=self.shapes_menu)
        self.shapes_menu.add_command(label="Oval", command=lambda: self.set_shape('oval'))
        self.shapes_menu.add_command(label="Rectangle", command=lambda: self.set_shape('rectangle'))
        self.shapes_menu.add_command(label="Heart", command=lambda: self.set_shape('heart'))
        self.shapes_menu.add_command(label="Star", command=lambda: self.set_shape('star'))
        self.shapes_menu.add_command(label="Circle", command=lambda: self.set_shape('circle'))

    def paint(self, event):
        x, y = event.x, event.y
        if self.eraser_mode:
            self.canvas.create_oval(x-10, y-10, x+10, y+10, fill='white', outline='white')
        else:
            self.canvas.create_oval(x, y, x+2, y+2, fill=self.color, outline=self.color)

    def set_color(self, color):
        self.color = color
        # turn off eraser when colour is being changed
        self.eraser_mode = False

    def toggle_eraser(self):
        self.eraser_mode = not self.eraser_mode
        if self.eraser_mode:
            self.color = 'white'
        else:
            self.color = 'black'

    def clear_canvas(self):
        self.canvas.delete("all")

if __name__ == "__main__":
    root = tk.Tk()
    app = DrawingApp(root)
    root.mainloop()
